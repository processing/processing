0030
_ kjc issues
_   convert color -> int
_   comments are removed from exported files
_   modify to allow for the 'build' directory on lib
_ make a new 'dist' function for building

_ exceptions in draw() apps aren't caught
_   the program resize(200, 200); just does nothing
_ fold simpleserial into BApplet
_   sprint an sprintln functions
_   make i/o work just like mouse (event driven, with dflt behavior)
_   need to have function to enable it in setup
_ make scrollbar for console


JAVA BUGS
_ cursor disappears in textarea and doesn't reappear until re-entry
_   windows: jre 1.3.1_03 through 1.4.0_01


UNSORTED
_ pde.properties_osx, pde.properties_os9, pde.properties,win ?
_ work towards alpha release
_   alpha transparency
_   line drawing problems
_     need 3d version of bresenham
_ image caching.. to be used as texture memory on accel platforms
_ make processing useful/usable
_   start working on writing pdf files
_   loading images/files from same dir as .pde file
_   option to use jikes
_   use external editor or write a usable one
_ write simple class for lcd panel 
_   build adapter to plug directly into db9 serial port
_   figure out characters used on screen by default (check web)
_   make unicode converter from unicode char -> lcd screen bytes
_   hook up lcd screen to power/serial port to test
_   code to reprogram lcd screen
_ look through rabbit api
_   look into integration of cmd line compiler
_ check out flash for its text editor
_ write function to swap different names for Proce55ing
_   use for window title
_   simple app that does swapping of letters as an animation
_ project name is changed by clicking on the name and typing
_ user name is changed by clicking and typing
_   after user hits 'enter', checks to see if user exists
_     if not, pops up message asking if they want to change
_       message goes in same spot as error/status label (turns yellow?)
_     if user says 'no', then 


(C)BAGEL WORK
_ try screengrab using malloc and/or gobs of extra memory
_   debug the version inside bagel b/c it's simpler
_ bagel needs to be able to resize itself
_   also to address screen as if it's another size
_     is that simply a matter of changing the viewport?
_   letterboxing as appropriate
_ build windows app for testing bagel c++ ... -lgdi32 for cygwin
_ updates from p5 api changes
_   triangle() 6 parameters
_   quad() 8 parameters
_   rect/rectMode again
_   new color solution
_     color() -> uses colorMode
_     red/green/blue() hue/saturation/value() functions
_     getPixel/setPixel
_     swap in 'color' as an int
_     color c = #67aa78
_   keyDown(), mouseDown(), lastMouseX, lastMouseY
_   degrees(), radians()


teaching 3D
_ expectation for 3D objects is that they begin in the center
_   rather than a translate(W/2, H/2) then draw rotating cube

things noticed while casey watched him using the software
_ if no 0 before decimal place in a number it breaks
_ display window should have separate close box
_ save window positions on closing (due to crashing)
_ title of the file should be shown
_ needs to be a menubar
_ text editor is quite bad (hiding cursor thing)

bagel/cbagel stuff
_ try screengrab using malloc and/or gobs of extra memory
_   debug the version inside bagel b/c it's simpler
_ bagel needs to be able to resize itself
_   also to address screen as if it's another size
_     is that simply a matter of changing the viewport?
_   letterboxing as appropriate

things noticed while casey watched him using the software
_ if no 0 before decimal place in a number it breaks
_ display window should have separate close box
_ save window positions on closing (due to crashing)
_ title of the file should be shown
_ needs to be a menubar
_ text editor is quite bad (hiding cursor thing)

biggest problems from french workshop
_ syntax more difficult than expected: semicolons and braces
_   part is translation issue--wasn't a quick fix
_ curly braces weren't on the keyboard
_ encouraging people to indent their code for clarity
_ slow to understand 'blocks'
_   translation issue but could be aided by visual cues in editor
_   might be better to use braces on separate lines to reinforce
_ couldn't enforce people working on specific exercises
_ too many cubes.. people playing with 3d before understanding it
_ would be nice to have examples for all concepts on site
_   or in a small printed book that serves as a reference
_ courseware not complete--difficult to collect assignments

questions to resolve
_ is it necessary to have fullscreen option on toolbar anymore?
_ what's better than POLYGON_CONVEX and POLYGON_CONCAVE?
_ should we use jdk 1.3 or msft vm?


BAGEL / high
b _ better access to projX et al
b _   what's a better name? calcX? or write to an array?
b _   projectX, projectY, .. or projectedX ? 


BAGEL / high & time consuming
b _ alpha
b _ concave/complex polygon shtuff
b _   eventually POLYGON auto-detects convex/concave polygon
b _   also add POLYGON_CONVEX and POLYGON_CONCAVE
b _ implement clipping planes and clipping of objects
_ clipping [may be needed for current genome browser project]


BAGEL / medium
b _ setting stroke width on circle makes odd patterns
b _ area copying functions
b _   copyPixel(x, y, to_x, to_y)
b _   copyArea(x, y, w, h, to_x, to_y)
b _   copyImage(x, y, w, h,  to_x, to_y)
b _ bresenham (flat) oval function
b _ NullPointerException apparently when things way offscreen
b _   i.e. glyphrot with scale set to 4
b _   or at least that things get ridiculously slow
b _   clipping issues here.. but also something in scan converter
b _   not clipping areas from offscreen
b _     huge geometry slows things way down
b _ adaptive sizing of circle segmenting based on rendered size
b _ make size() available throughout
b _ stroked version of sphere is just a circle


BAGEL / medium & time consuming
b _ anti-aliasing
b _ rewrite line and stroke code, it's a buggy mess
b _   lines become 2 pixels thick after a 3D transform 
b _   better handling of single-pixel special case
b _   box is not filling properly
b _     problem is using single pixel, flat line with no z
b _ illustrator exporting
b _   version of Illustrator.java that uses bagel api
b _   sorting of polygons/lines on simple painters algorithm
b _   better lighting model to show darkness at various depths
b _     maybe just ultra-high res bitmaps from gl
b _   version of ProcessingApplet that replaces g. with ai. or pdf.

_ picking
_   ability to write data other than image into the buffer
_   user can introduce new kinds of buffers at will (!)
_   lists of names of objects, or the 'line number' buffer
_   but how to determine *where* on object the hit occurs?


BAGEL / lower
_ function to evaluate bezier or catmullrom points
_   used heavily in genome valence
_ why is every other pixel missing from mouse events?
_ fixed fonts are screwed, should only work at screen resolution
_   getStream for the filename doesn't work for directories
_     getfont("fonts/blah.fbf") refers to blah.raw, but that
_     also needs to be searched for in the fonts/ dir..
_ fast(er?) version of bagel that just uses java graphics
_   but leaves out many features
_ line endcaps and line joins
_ move math functions into utility library associated
_   with bagel, because those will be useful on other bagel platforms
_   pApplet will call BagelMath.whatever, so still looks like cos()
_ build in second matrix type: 2d affine
_ make sure line() commands don't try to have a fill
_ write code for reading uncompressed b/w tiff images
_   incorporate for fixed width fonts
_ setting accuracy of circles/sphere
_ setting accuracy of curve segments
_ write shearing function
_ optimize rotation functions
_ test winding polygons in different directions
_ test lighting to see how it compares with gl
_ non-homogenous colors for beginShape()
_   currently disabled b/c homogenousColors not set false for vertices
_   and code not written for curve vertices
_ better lockout inside beginShape() to keep other things from happening
_ when stroke in use, stroke letters (currently stroke doesn't affect
_ try with 1.4 frame buffer stuff to see if it's faster
_   will 1.4 work on osx?
_ way to screen grab at higher resolution
_   method for rendering at higher res and then scaling down
_   (even if this causes signficant performance hit)
_ look at glut for other needed shapes
_ setting a fill color when drawing an image should affect the image
_   or maybe image.setColor or setTone to mix a specific color in
_ live video editing, wanting things more procedural


PDE / high
a _ add frame to launched window
a X   add maximize event catcher to make fullscreen
a o     doesn't work, because of screen sizing stupidity
a _   shift-click on play to go directly into this 'presentation mode'
a _ lines being highlighted for errors are off
a _   test this on other platforms as well
a _ importing images doesn't work
a _ Compiler.disable() message is weird and doesn't always work
a _   probably just remove it for now
a _ kjc is really frustrating about some of its error/warning msgs
a _   erroneous errors from kjc regarding 'var not inited'
a _     is there any way to disable this message?
a _   talk to simon about error streams and kjc
a _     better piping of output from kjc
a _     modify kjc to take a PrintWriter, instead of current hacks
a _   might be able to set default values for vars using perl5subst
a _ lib/pde.properties should be read using getResource
a _   otherwise path issues cause trouble (likely under win98)
a _ check logs to see where we're getting traffic from

b _ serial.messageReceived extra long crap in demo.pde (clean up?)
b _   improve simpleserial and clean up a bit
b _   document a bit more regarding its use
b _   should serial be an event like mouse/key
b _ NullPointerException on startup in pde editor buttons
b _   shows up on slower machines, probably images not loaded yet
b _ use a vm that won't destroy the screen like sun/ibm does
b _   this means msft or newer version of jdk


PDE / high & time consuming
a _ exporting to applet/.jar file
a _   need to set project name for files
a _   'data' directory for all media
a _   include other .class files built besides the main one
a _     compile into 'classes' folder
a _   include referenced image and font files (can't do if numbered)
a _   exporting applets that have custom name problems:
a _     if extends processingapplet, the name user types must be same
a _     gets confused about paths and puts boogers in weird places
a _     doesn't compile correctly (must first compile with play)
a _     doesn't include additional (private) classes
a _   when exporting 'name of folder for export...'
a _     default name should be from public class <xxxx>
a _     because otherwise errors are happening
a _     or name from user only determines folder name
a _       if extends ProcessingApplet [more compatible]
a _   make sure export is compiling first
a _     right now have to hit play and then hit export (?)
a _   include main class info for executable jar file with jdk > 1.2
a _   remove .java and .class files for compiled classes
a _     (just clean up the boogers afterwards)
a _   it's really a pain to use external files in processing
a _     getStream sucks (zach rewrote)
a _     should be able to work for application or applets
a _     may want to use getResource() (to get things from .jar files)
a _   compiling .java files leaves the .class files next to the .java
a _     make sure all the dirs in sketchbook added to classpath on startup
a _     if new dir added, must restart processing (this is acceptable)
a _   ability to include other code from sketchbook directory
a _     compile entire sketchbook on startup, check for new files on compile?
a _ sketch.properties contains the last program run
a _   also the window positions, etc
a _   if it doesn't exist, starts with a new project
a _     for a new project, name it untitled-0001 or as appropriate
a _       so that previous projects aren't written over
a _ 'open' button is a switch-to button
a _   pops up list of everything in the sketchbook
a _   first item is 'new sketch', followed by delimeter
a _   next is list of subdirs other than current user, then delim
a _   the rest are the items in the current user's folder
a X need 'new' button on the toolbar --> NOPE, first item on 'open' menu
a _   the zero looking one might be good (instead of export)
a _   export could be three circles in a row, overlapping
a _ everything is a project.. what about short snippets of code?
a _   this version won't be able to access everything from scrapbook
a _   (that requires a more robust class loader)
a _ verify save when
a _   closing p5 window
a _   moving to other sketch

b _ serial works poorly for starting/stopping applets
b _   this is behaving strangely
b _   breaks on every 2nd run when using serial apps (or others?)
b _     try calling gc on stop as well
b _ class unloading not happening
b _   when doing an extends ProcessingApplet
b _   need to add randomizer to even non-self gen'd classes
b _   or figure out how to unload old classes.. grr


PDE / medium
b _ include stdout/stderr in the processing window
b _   option to toggle window on/off (not just in properties, but realtime)
b _   set # of lines in properties
b _ work on editor buttons
b _   play button not really working
b _     never un-highlights, especially with exceptions
b _     also when using draw() instead of loop()
b _       applet needs to notify runner that it has terminated
b _   make PdeEditorButtons wait until mouseup to change
b _     (currently doesn't feel as good as it could)
b _ look into using serialporteventlistener for simpleserial
b _   may help with problems due to threading/synchronizing
b _ licensing issues with kjc (before public release)
b _ font usage/substition solution
b _   write code to bind/convert java fonts
b _     best would be freetype or jdk 1.3/1.4
b _   java freetype? jni freetype to build texmap fonts?
b _   look at flash file format? (does it have kerning?)


PDE / macos
a _ how to make double-clickable version for osx
a _ crashes when people click on help in top bar (same in DBN) [macos9]
a _ dataInputStream, setUseCaches on the url to false
a _   URLConnection.setUseCaches(false)
a _ parent.obj.close() on the url
b _ serial port code needs to be implemented
b _   something that docks better to java serial api
b _ need double-clickable application version for the mac
a _   if os9, this is a no-brainer.. for osx may take a little time


PDE / low
_ support for moving the camera around
_ if 'void' left out before loop or setup, cryptic message about
_   'constructor loop must be named Temporary_23498_2343'
_   add a better handler for this specific thing?
_ shouldn't do so much work (redrawing in loop) if waiting for input
_   mode for when no full animation taking place
_   otherwise machine is continually maxed out while app is running
_ quicktime exporter or image sequence export
_   fairly quick--just use code from dbn
_ bug in paren balancing
_   paren problems comes from overusing parens (too many closing)
_   image[first[i], 0, 0) hitting last paren causes jump to top
_ export as application 
_   not difficult to do, just some tweaking once applet export works
_   wrapper that invokes the applet using a copy of the jre
_   main() method needs to set layout manager if jexegen is to be used
_     (msft vm defaults to null layout manager)
_   also make sure pack() is happening
_ stop() method in applet should stop kjc environment
_   should be able to call stop() to 'quit' an applet
_ make close() work to kill applet in kjc
_ save window x, y, width, height to pde.properties on exit
_ stderr in red color
_ run java code besides processing applets 
_   if not processing applet, look for a main(), no main give an error


PDE / features
_ might be nice to have some notion of plugins for pde
_   color picker or other things written by folks
_   add all .jar files in lib/plugins on startup
_ make some kind of internal color picker
_   could be a separate window that's always around if needed
_ regexps: http://javaregex.com/cgi-bin/pat/tutorial.asp
_ a better editor: 
_   syntax coloring
_   emacs indents and key commands
_   http://mathsrv.ku-eichstaett.de/MGF/homes/grothmann/je/index.html
_   want emacs-style editor that's faster loading than emacs
_ tweak updater a little bit so it's more likely to work
_   use numbered versioning? 
_   give updater feedback (progress dialog, error msg)


PDE / science fiction
_ toggle for showing a function name each time its hit
_ toggle for showing line numbers within a function
_   i'm here messages, tie in with breakpoints for debugger
_   lightweight debugger, doesn't slow down, runs in back
_ toggle to show attr/value for some var in simple way
_ comments as debugging descriptors, output to console, shown in context
_ comments as naming for shapes drawn after it,
_   or some other model of naming based on inserted text with "" or // or #
_   could fit nicely with printf-style statements and comments
_   comments would contain descriptions //!blah for printing and formatting
_ sketchbook - doodling/scribbling area.. since wacom tablet easily accessible
_ look into maxx programming
_ single or multi-file cvs, not based on directories
_   i.e. i want illustrator.java for a project
_   version # stored in .java file
_   if a new version is available, asks 'do you want to update?'
_   multi-file: quicksort + sortable
_ check out interface builder for interesting tidbits


WEB
a _ online discussion/talk system (gets people using the site too)
a _ online signup cgi for people to add themselves to the list
_ see about setting up simple bug tracker/feature system
_   queue for people reporting things externally
_   bugzilla but simpler
_   would also be nice for people to be able to vote on features


DOCS / guide
_ document imageMode, planeMode, ellipseMode
_ 'rot' example not working in release 18
_ list of reserved keywords
_   make note of functions/variables used by ProcessingApplet
_     using them in your app will break things (i.e. init())
_ explain using inner classes and using non-public classes
_ start 'errors' section
_   NullPointerException inside setup usually means no size()
_ ability to write functions and inner classes
_ mention ability to use import statements in java mode
_   ability to do real (but not public) classes in same document
_ make note in documentation about getting access to pixel array
_   pixels[] is in ProcessingApplet
_   check to see if get/set functions in applet actually work
_   fix documentation appropriately
_ image formats supported (gif and jpeg)
_   if image doesn't load, just prints an error on console
_ notes about running on win98 and that stupid startup exception
_ make note in documentation about convex polygons


DOCS / technotes
_ bug in sun vm for freaking out
_   also happened with ibm vm.. grr.. (or was it a path problem?)
_ fixed width font format as technote and how to use
_ using runtime.exec to run .ai files
_   code to automatically open generated .ai files (exec(..ai))
_ debugging serial code
_   hyperterminal - watching for binary garbage vs ascii text
_   first debug (maybe even using ascii) and watch in hyperterminal
_     or ship pooterm along with processing
_   flicker - often ascii instead of binary
_   timing of sleep, size of message, timing of write
_   starting processing first, then stamp
_ using transformPoint
_ using curves
_ making things faster
_ memory running out, using ms and mx
_ noBackground() if you're covering everything
_ converting to/from ascii/decimal/hex/binary


DOCS / reference
_ adding lights
_   control of position/color of default lights
_ controlling camera movements
_   mcguffin sent some notes about this
_ multmatrix/identity
_ constants besides PI, TWO_PI
_ min/max with 3 parameters
_ if (a) ? 3 : 4
_ formatting printf-style things
_ audio input
_ audio synthesis
_ just saying 'millis' in processingapplet, instead of getMillis()
_ keyPressed, keyReleased, mousePressed, mouseReleased


MISC / building
_ build a linux/x86 release
_ write converter for java bagel -> cpp version
_   include #ifdefs for c stuff
_ fix buzz.pl to not create ../../bagel 
_ how to use ssh identity file to maintain auth for brancusi
_ write dist.bat for releases
_   don't forget to update 'export' dir with processing releases
_   write code for automatic macintosh releases


MISC / code tidbits for scrapbook
_ delayUntil would be nice to have
_   but at some point there has to be a cutoff
_   have a library of useful code that people can add to programs
_   otherwise things are too simple, and env is a crutch
_ quicksort should probably just be made into 'sort' class
_   it's the only one ever used
_ stringutils.split is a useful one
_ readFileLines et al
_ translateMiddle() ? to move to the middle of the screen?
_ perlin noise function
_ read table/csv formatted data into a matrix
_   pseudo-database format version of this that stores indexes to file
_     rather than loading the whole thing at once

BXSocket, BXServerSocket
  BXNetwork

BXSerial

BXSound, BXSampler or BXAudio
  play aiff or mp3 sound with a single command
  play buffer of samples with a single command
  full class allows play/pause/more advanced loading

BXMovieInput/Output or BXVideo or BXQuickTimeOutput/Input
  BXMovie and BXCamera?

BXImageIO, BXTiffImage

BXDataFile (csv or tab separated data)
  BXDataMatrix

BXDatabase, BXDatabaseCache (keeps queries to fill out table)


MISC / things that break often/things to test
_ handling of key events (both as applet and in application)
_ per-vertex coloring for different kinds of shapes
_ that each shape type works as expected
_   what if one short or one too many vertices?
_ transforms are affecting geometry
_   i.e. are line and point working in 3D?
_ why did i think that z was backwards from gl?
