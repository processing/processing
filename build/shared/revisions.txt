caution: the beverage you're about to enjoy is extremely hot. this
file is a list of changes between each release. this is not a general
reference of how to use processing, because the information for older
releases will be super crusty. 


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0074

- fixed an issue with text and shapes fixing in a bad way (paul
  fishwick's 'clock' bug)

- removed a zbuffer precision hack that was drawing lines above
  everything else

- includes new icons designed by florian


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0073

fixes to several nastier bugs (hopefully) 

- the hanging bug may be fixed in this release

- loadImage() should no longer re-download the entire jar file

- libraries are built as 1.1 code like everything else, so things with
  particles can be exported again

- fixed a minor bug that prevented non-smoothed fonts from being 
  created in the font builder on macosx due to apple's creativity 
  with the java spec


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0072

bug fix release, most major being that the code folder should now be
working again, and error messages from libraries may have an easier
time of propogating upwards.

BUGS

- code folder works again.

- the code folder hanging bug *may* have been fixed.. either by a fix
  from francis li, or by the error message changes by me. keep your
  fingers crossed.. 

- loadImage() is broken on some machines.. a small hack has been
  introduced to get around this, hopefully it doesn't break for
  everyone else. as a result of the hack, the 'cache' setting on
  images is temporarily ignored.

- hint()/unhint() settings were static variables, meaning that they'd
  stick around per processing session, which is too long. 


API & STUFF

- g.m00, g.m01 etc are now public

- error message shows up when a library isn't available


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0071 

bug fix release, clears up several things with text and other tidbits 
found by all y'all beta testers. if this is your first release 
since 68 or 69, you should read about the changes made in rev 70.


BUG FIXES

- suppress "bad file descriptor" error on mac os x

- properly alphabetize the sketch menu (ignore upper/lower case)

- fixed export on macosx

- multiple tabs no longer causes things to run in another java vm.
  (unless the other tabs are for .java files)

- dim 'rename' on the first tab, since it cannot be renamed.

- "save as" now properly updates the tabs

- don't let people "save as" a sketch inside itself.

- removed the resize box for applets (since they can't be resized anyway)

- cursor() functions are now usable (public) again

- pre, post & draw now work with libraries


CHANGES

- the 'key' variable has been made into a char, so that things like 
  println(key) makes more sense (and in keeping with java's getKeyChar)

- added a little gap to the left of the editor frame
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1097363967;start=0

- changed "new file" to "new tab" for clarity

- "add file" of a .pde or .java file already inside the sketch folder
  no longer produces an error, it just updates the tabs.

- "save as" defaults to the current sketch location and name

- text(x, y, w, h) now uses the current rectMode() for placement. 

- align left, center, and right are now properly implemented for text().

- PFont2 has been merged back into PFont. java 1.2+ specific features 
  that had been sequestered to PFont2 are now handled through reflection.


CHANGES I FORGOT TO MENTION FOR REV 70

- 'online' is now a boolean instead of a function that returns a
  boolean. this was actually in 0070 but i forgot to mention it

- also from 70, people who used triangle_count, it's now called
  triangleCount.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0070 - MEGABUCKET - 29 September 2004

YOUR CODE WILL ALMOST CERTAINLY BREAK IN THIS RELEASE, READ THE
"MAJOR CHANGES" SECTION BELOW TO SEE HOW TO FIX IT. this is one of the
most major releases to date in terms of things that have been changed,
fixed, or revised. unfortunately, there will still be api changes
before beta. if you don't want to deal with your code breaking, then
wait until the beta. 

as of this release, we're also returning to more truly "alpha" status
for releases. from 70 until beta, releases will happen more frequently
(hopefully) and increment more quickly. however, we won't be
announcing a new release to the greater public until beta, at which
time we'll be done breaking everyone's code. more details here:
http://processing.org/discourse/yabb/YaBB.cgi?board=Collaboration;action=display;num=1096489132


major changes: (things that break your code) 

- if you have a program that uses "void draw()" to draw a static
  image, you need to add the line "noLoop()" to setup or to the first
  line of the draw method itself.

- for any programs that use "void loop()" you need to change its name
  to "void draw()". 

- BImage, BFont, BGraphics, etc are all PImage, PFont, PGraphics.
  you'll need to rename them in your program.

- libraries will almost certainly need to be rewritten for this
  release. we're working with amit on an update to sonia and several
  other libraries will be included in future releases.

- mouse and key events are now properly queued, meaning that functions
  like mousePressed() and keyPressed() will be called at the *end* of
  your draw() method. this means that you can "draw" inside of those
  methods, just note that it'll happen after all other drawing.
  http://processing.org/discourse/yabb/YaBB.cgi?board=Syntax;action=display;num=1079555200;start=0

- CENTER_DIAMETER has become CENTER

- replicate() in PImage is now called copy(). other changes in PImage
  as well, see the ref: http://processing.org/reference/PImage.html

- curveSegments and bezierSegments are now called curveDetail and 
  bezierDetail.

- net, serial, and video are completely different. see the libraries
  reference: http://processing.org/reference/libraries/index.html
  their examples have also been updated.

- quicktime is no longer required to be installed on windows

- the 'fonts' folder has been removed. these were old (had no special
  characters like umlauts and whatnot) and of questionable copyright
  status, so we took them out. you can create fonts to your heart's
  content using the "Create Font" option.

- history has been (temporarily?) removed. in the meantime under the
  "Tools" menu is an option named "Archive Sketch" which will zip up
  the contents of the current sketch folder into a numbered archive.
  the numbers will automatically increment yoursketch-001.zip,
  yoursketch-002.zip etc.

- key events for things like arrow and whatnot should use 'keyCode'
  instead of 'key'. so 
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096304533;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096304779;start=0

- the sizing/spacing of text() has changed! a combination of small
  bugs inside text() and the "Create Font" tool meant that text was
  not sized properly. it's now been tweaked to more closely resemble
  the sizing used by the platform. for  instance, 48 point type of a
  font in illustrator looks like 48 point type of the same font in
  processing. 


additions: 

- hex(), binary(), unhex(), and unbinary() functions to make your
  geeky debugging sessions that much happier. 
  color c = #ffcc00;
  println(hex(c));

- support for text in a box: text(String text, x, y, width, height);
  this is like the text box in adobe illustrator or programs like 
  that, note that the x, y where it starts will be the top of the
  line of text, not the baseline of the text as is the case for
  the other text() functions.

- operators for int(), string(), char(), and other basic types.
  String s = "10.2";
  float f = float(s);
  making it simpler to do conversions between types.

- these operators also work on arrays:
  String s[] = { "10.2", "3.2" };
  float f[] = float(s);

- looping can be turned on/off via loop() and noLoop(). the default is
  that loop() is in use. there's also a redraw() function that you can
  use in noLoop() mode which lets you redraw the screen once (i.e. if
  you want to update after a mouse event)

- multiple files! you can create new tabs that store separate classes
  and pieces of code. how happy. however, the tabs are only separators
  for your code.. the code is all still added to the main class (the
  first tab) the same way as if the code had appeared all jammed into
  that first file. 

- for advanced users, additional tabs can be java files, which, unlike
  the tabs described above, will *not* be embedded into the main
  applet class. to create  a java file, include ".java" at the end of
  the new file's name when creating the new tab. also note, however,
  that the java files will not go through the preprocessor, meaning
  that 0.1 will have to be 0.1f if it's a float, and some other
  tidbits like that.

- the "examples" folder for sketches is read-only. "save as" of an
  example won't save it inside the examples folder.
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096295037;start=0

- read-only sketches (i.e. from a CDROM) are now handled properly.

- you can save sketches anywhere you want. and there's a preferences
  dialog that lets you set the location of your sketchbook. that
  annoying "sketchbook/default" thing is no more. in preferences, 
  you can also set whether processing should ask your for the file
  location & name for each new sketch, or if you just want the old
  behavior (automatically created sketch named sketch_yymmdd).
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096295141;start=0

- holding down 'shift' and hitting the 'new' button will do the
  opposite behavior for "new sketch" (i.e. if "prompt for sketch name"
  is selected in preferences, it won't prompt, and vice versa).

- preferences and sketchbook are now stored in: 
  macosx: /Users / yourusername / Documents / Processing
  windows: Documents and Settings / yourusername / My Documents / Processing
  linux: home directory -> .processing 
  you can change the sketchbook location, but this folder will
  continue to be used to store preferences.txt and other files that
  may be needed in the future.

- a default template can be used for exporting applets. copy
  applet.html from processing's "lib" folder to your sketch's folder,
  and modify it to your heart's content. each time you re-export, your
  html file will be used instead of the standard one.
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297644;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297669;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297787;start=0

- javascript support is now handled by saying
  "Import Library -> javascript"

- for advanced users, what was formerly called 'bagel' is now in
  package processing.core. we'll refer to this as "core", and the
  files can be found in lib/core.jar of the processing folder. no more
  pde.jar and separate extraction methods for 1.1 code and 1.3 code to
  be used with other IDEs.


minor additions:

- tweaked up the menus. the "Tools" menu will be user-expandable in a
  future release. 

- added some better error messages for common compiler errors.

- sketches with a large 'data' folder will run better
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096300630;start=0

- added a preference for auto-cleaning the sketchbook.

- the console is emptied each time a new sketch is opened.

- PImage.filter(GRAYSCALE) will make an image grayscale. 
  PImage.filter(BLACK_WHITE) does something else fascinating.

- hint(NO_DEPTH_TEST) will disable the zbuffer (unhint will re-enable)
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303102;start=0

- printarr() works like println() for arrays.. it just prints out a
  long list of the array contents.

- added a lerp() function
  http://processing.org/discourse/yabb/YaBB.cgi?board=Programs;action=display;num=1083289030;start=0

- added angleMode(DEGREES) and angleMode(RADIANS)
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303599;start=0

- noiseSeed and randomSeed help make random() less random.
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096304206;start=0

- added a boolean variable called 'focused' that is set to true when
  your applet has focus. use this to tell the user "click inside the
  applet" or whatever.

- saveFrame no longer dies when it includes folder names. it also
  saves to the sketch folder.
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303714;start=0

- inputFile() returns a File object after prompting the
  user. outputFile does the same after asking "save as..."

- for those dismayed by things flying into the camera.. we regret that
  this release still does not properly implement clipping planes. in
  the meantime, an option has been added to avoid some of the mess. 
  it's incomplete and doesn't always work, but adding
  hint(NO_FLYING_POO) to your code might improve the situation. 

- savePath(String filename) returns the full path name for a file to
  be saved relative to the sketch directory. createPath(File dir) will
  create all necessary subfolders in a long path. 


bug fixes:

- PGraphics will now properly draw as an image
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096304847;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=Syntax;action=display;num=1080671926;start=0

- tab key should be working again
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096304457;start=0

- fixed several bugs with things like color(), red(), etc. color() now
  works outside functions, but assumes that you mean rgb/255. 
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303467;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303540;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303568;start=0

- fixed some oddness with lines fading out
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303365;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303406;start=0

- net is completely rewritten and now works properly.

- fixed bug in polygon filling
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303189;start=0

- tweaks to make video less of a headache
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096302179;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096302509;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096302580;start=0

- lots of fixes to "Create Font".. plus better multi-language support 
  for non-ascii characters (i.e. Japanese) 
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096303772;start=0

- fixes to random()
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096302935;start=0

- fixed some nasty find/replace bugs
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297457;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297524;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297575;start=0

- sketchbook is now sorted properly
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297115;start=0

- beautify now pays attention to your tab settings
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096294561;start=0

- re-adding a file to the data file no longer destroys it
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096294854;start=0

- fixed a goofy compiler OutOfMemoryError when no return on the last line
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1096297246;start=0

- fixed compiler error messages to not get jammed onto a single line


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0069 - 28 march 2004

this is yet another bug fix release, which repairs several things, 
mostly things that i've run into over the past few as i've been doing
a lot of coding with processing, and some things that were really
causing trouble for folks on the board. basically i was bummed out to
see bug reports on things that i had fixed, or could fix semi-easily.

i'm not releasing linux for this one for lack of time. it will also
not be listed (at least not initially) as the default download on the
page, since it hasn't been tested heavily: this release might not be
particularly stable, i threw it together because i've been working
with p5 a lot lately and had several fixes, but didn't have the time
to do the usual "vetting" process with the testers. if you have any
weird problems, just use 0068.

it's likely that a handful of the examples are also broken because of
the api changes.. my apologies.. 

there will likely be a couple more releases before the "big" 
release that i still need a better name for than "the big release".
suggestions are welcome.


[ ide fixes / changes ] 

- fixed the ever-annoying problem of using video with a 'code' folder.
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1077900024
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1069724180;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1073523928;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1076679293;start=0
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1076649501;start=0

- added an option to pde.properties so that users can set the amount
  of memory to for java mode applications. currently it's set to:
  run.external.memory=128
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1078699341;start=0

- wheel mouse should now be working when using java 1.4 on the mac.
  thanks to jonathan feinberg for the fix!

- lots of fixes to the font builder. remembers previous settings,
  doesn't die on small fonts

- added CFBundleIdentifier to mac version so that it's more osx savvy.
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1078739015

- *temporarily* disabled "replace all" because it's doing more harm
  than good as of now. it will be back in the next release, i just
  didn't have time to repair it for this one, and since it's
  destructive, that's bad.
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1076740626
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1080213711


[ bug fixes ] 

- macosx was flickering several times on startup, no more. this was
  also the cause of some other threading weirdness across other
  platforms. this probably still needs a little work, but it's better.
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1073111031

- some internal fixes to how camera modes worked.. screenX was
  slightly broken for some circumstances

- min() and max() with three variables were broken. no longer.
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1076804172

- the constant for CONTROL wasn't set properly 
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1077058788

- fixed a bug when using non-ascii chars with fonts
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1077475307;start=0

- fixed a bug where split() would throw an Exception on an empty string
  http://processing.org/discourse/yabb/YaBB.cgi?board=Proce55ing_software_bugs;action=display;num=1077664736

- fix bug where single pixel points were ignoring their alpha values


[ api changes & additions ] 

- loadStream() has become openStream(), for better consistency. 

- toInt(), toFloat(), to String() functions.. 
  ** the naming of these are subject to change..     **
  ** we haven't decided on a proper naming for them! **

- splitStrings() becomes just split().. splitInts() goes away. 
  splitInts becomes -> toInt(split(someString, ','));

- split() now handles multiple chars, i.e. 
  split(someString, ", ") will split on any number of comma or space
  chars in between (sort of a regexp but not really).
  to split on commas and any amount of whitespace between, use:
  split(someString, "," + WHITESPACE);

- WHITESPACE is a String constant that includes the normal whitespace
  chars (space, tab, linefeed, carriage return, etc) plus the unicode
  "non breaking space" char.

- chop() function that also handles the unicode non-breaking space
  character (found commonly on the mac)

- text(x, y, z) instead of just text(x, y)

- printMatrix() and printCamera() print the current (object space)
  transformation matrix and the camera (perspective) matrix. 

- nf() and nfs() now work on whole arrays of numbers

- nfp() is like nfs() but shows a plus sign instead of a space

- code from toxi to support .tga files in loadImage()
  http://processing.org/discourse/yabb/YaBB.cgi?board=Programs;action=display;num=1078459847;start=0

- bagel code is getting less 1.1 vs. 1.3 specific, thanks to additions
  from jonathan feinberg.


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


ABOUT REV 0068 - 2 february 2004

this is a bug fix release, not the planned version of 68 that supports 
multiple files and all sorts of amazing magic. it will be the last release 
for the next two months while ben finishes his dissertation. 


[ bug fixes ]

- concave/convex polygons are now handled properly. just don't make
  the last point of the polygon be the same as the first, otherwise
  you'll confuse the tesselator. however! there is a bug (that showed
  up during the release process.. ugh) that when smoothing is enabled,
  sometimes thin lines will be visible within a concave polygon. this
  will just have to be fixed in a future release. however, as long as 
  stroke() is enabled on the polygon, the lines should not be visible.

- fixed a bug that made the p5 environment freeze when an applet crashed

- fixed problem with the environment locking up when the console got
  too full. the console now has a maximum number of lines, set to 500 
  by default. the console is also cleared on each run, so that doesn't 
  cause trouble anymore. you can change both settings in pde.properties.
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1075759355

- fixed a find/replace bug that made the thing lock up when changing
  case on a search. oops.
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1075416670
  http://processing.org/discourse/yabb/YaBB.cgi?board=BugFixes;action=display;num=1075416741

- fix to the noise() function by toxi (thanks toxi!)

- fix to the sphere() function by toxi (yay toxi!)

- font builder should update when the size for the font is changed
  (so long as the size itself is valid)

- font builder bug, was cutting off parts of letters

- better loadStream support when bagel is used by itself


[ features ] 

- added support for non-ascii characters in the font builder
  http://processing.org/discourse/yabb/YaBB.cgi?board=Programs;action=display;num=1067596427

- added an option to disable smoothing on font creator

- better support for international characters inside the development
  environment. 

- toxi added sphereDetail(), to set the level of accuracy on spheres


. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 


in spite of their historical feel good campiness, i've removed the
notes from earlier releases because this file was getting out of hand. 
